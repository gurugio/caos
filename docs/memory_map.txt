
[ Memory Map ]


2009.1.20 gurugio



1. booting step, physical memory map

First, bootsect.asm loads setup.asm and kernel.img and executes setup.asm.
Second setup.asm copies kernel.img at 0x100000 (1MB) and build GDT to activate protected mode. The setup.asm activates protected mode and immediatly long mode.

The setup.asm must build paging tables (PML4,PDP,PDE,PTEs) to turn into long mode so that the linear address is considered than physical address.



0x0     ~ 0x1000    BIOS reserved
~~~~~~~~~~~ free

0x8000  ~ 0x9000    GDT
~~~~~~~~~~~ free

0x9000  ~ 0xA000    setup.asm
0xA000  ~~~~~~      first-loaded kernel
~~~~~~~~~~~ free

0x90000 ~ 0x91000   PML4
0x91000 ~ 0x92000   PDP
0x92000 ~ 0x93000   PDE
0x93000 ~ 0x97000   PTE[3:0] (for 8MB-mapping)
0xA0000 ~ 0x100000  BIOS & VIDEO

0x100000 ~ 0x200000 final-loaded kernel area





2. linear address mapping

 2.1 long-mode switching in setup.asm

Physical memory area 0~8MB is directly mapped into linear address 0x0 and also 0xFFFF800000000000.
Therefore physical memory 0~8MB is the same with linear address 0x0~8MB.

Physical            linear address      linear address
0x0 ~ 0x800000  =>  0x0 ~ 0x800000  &   0xFFFF800000000000 ~ 0xFFFF800000800000


 2.2 kernel-booting

Paging tables are re-builded in paging_init() function.
Then all physical memory is mapped into only linear address 0xFFFF800000000000, not linear address 0x0.

Physical             linear address
0x0 ~ phy_mem_size   =>    0xFFFF800000000000 ~ phy_mem_size




3. Booting memory allocation


For example physical memory size is 512MB, booting-memory is allocated as following.
Total physical page-frames is 131072 and 2406 page-frames is busy.


page index
0x0           BIOS data
0x9f  ~ 0xFF  BIOS and ISA video memory
0x100 ~ 0x1FF Kernel image
0x200         GDT
0x201         IDT
0x202 ~ 0x304 Paging-tables
0x305 ~ 0xA05 mem_map table

